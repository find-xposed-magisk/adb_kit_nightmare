name: ADBKIT Publish Actions
on:
  # push:
  #   branches:
  #     - main
    # paths-ignore
  repository_dispatch:
    types:
      - api
env:
  # APP名称
  APP_NAME: ADBKIT

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest
  #   environment: default
  #   steps:

  #     - name: Checkout the code
  #       uses: actions/checkout@v3

  #     - name: Checkout behavior_api code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'mengyanshou/behavior_api'
  #         token: ${{ secrets.GH_PAT }}
  #         ref: 'main'
  #         path: "${{ github.workspace }}/behavior_api"

  #     - name: move file
  #       run: |
  #         ls ${{ github.workspace }}
  #         mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
  #         mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

  #     - name: Install and set Flutter version
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'

  #     - run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y ninja-build libgtk-3-dev
  #     - run: flutter config --enable-linux-desktop

  #     - name: Building
  #       run: flutter build linux
      
  #     - name: Packaging
  #       run: ./scripts/build/generate_linux.sh
      
  #     - name: Release
  #       run: |
  #         curl --upload-file "${{ env.APP_NAME }}.deb" https://transfer.sh/${{ env.APP_NAME }}.deb

  build-mac:
    # The type of runner that the job will run on
    # runs-on: macos-latest
    runs-on: self-hosted
    # environment: default

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Checkout adb_kit_extension code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/adb_kit_extension'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/adb_kit_extension"

      - name: Checkout termux_api_plugin code
        uses: actions/checkout@v3
        with:
          repository: 'nightmare-space/termux_api_plugin'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/termux_api_plugin"

      - name: Checkout user_center_frontend code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/user_center_frontend'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/user_center_frontend"

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"

      - name: Checkout ni CLI code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/ni'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/ni"

      - name: move file
        run: |
          mv "${{ github.workspace }}/user_center_frontend" "${{ github.workspace }}/../user_center_frontend"
          mv "${{ github.workspace }}/adb_kit_extension" "${{ github.workspace }}/../adb_kit_extension"
          mv "${{ github.workspace }}/termux_api_plugin" "${{ github.workspace }}/../termux_api_plugin"
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

      - name: Setup node environment
        uses: actions/setup-node@v2

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      
      - name: Setup CLI environment
        run: |
          cd ${{ github.workspace }}/ni
          dart pub get

      - name: Setup other environment
        run: npm install -g appdmg

      - name: Building&&Packaging
        run: |
          export PATH=$PATH:${{ github.workspace }}/ni
          ni release --build-mac-dmg

      - name: Upload
        run: |
          export PATH=$PATH:${{ github.workspace }}/ni
          ni default -u
            
  # build-windows:
  #   # The type of runner that the job will run on
  #   runs-on: windows-latest
  #   environment: default

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:

  #     - name: Checkout the code
  #       uses: actions/checkout@v3

  #     - name: Checkout behavior_api code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'mengyanshou/behavior_api'
  #         token: ${{ secrets.GH_PAT }}
  #         ref: 'main'
  #         path: "${{ github.workspace }}/behavior_api"

  #     - name: move file
  #       run: |
  #         move "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/instance/behavior.dart
  #         move "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/instance/behavior.g.dart

  #     - name: Install and set Flutter version
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
          
  #     - name: Building...
  #       run: |
  #         flutter config --enable-windows-desktop
  #         flutter build windows --dart-define=VERSION=${{ github.event.client_payload.version }} --dart-define=VERSION_CODE=${{ github.event.client_payload.version_code }}

  #     - name: Packaging
  #       run: |
  #         .\scripts\patch_executable.bat
  #         Compress-Archive -Path .\build\windows\runner\Release\* -DestinationPath ${{ env.APP_NAME }}_Windows.zip

  #     - name: Release
  #       run: |
  #         curl --upload-file ${{ env.APP_NAME }}_Windows.zip https://transfer.sh/${{ env.APP_NAME }}_Windows.zip